<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="24.11.1.100">
<library/>
<procedure name="camera_initialize">
<interface>
<oc>
<par name="CameraHandle" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l>open_framegrabber ('USB3Vision', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', '1409000BFC2F_IDSImagingDevelopmentSystemsGmbH_U33250MLCHQ', 0, -1, CameraHandle)</l>
<l>set_framegrabber_param (CameraHandle, '[Stream]StreamBufferHandlingMode', 'NewestOnly')</l>
<l>set_framegrabber_param (CameraHandle, 'ExposureTime', 50000)</l>
<l>set_framegrabber_param(CameraHandle, 'Gain', 1.5)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="camera_initialize">
<parameters>
<parameter id="CameraHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<sem_type>framegrabber</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="robot_ctrl_drive">
<interface>
<ic>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
<par name="Speed" base_type="ctrl" dimension="0"/>
<par name="Direction" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>Direction:=Direction*0.8</l>
<c></c>
<l>DirSpeedL:=Direction</l>
<l>DirSpeedR:=Direction*-1.0</l>
<l>*if(Speed&lt;0)</l>
<l>*    DirSpeedL:=DirSpeedL*-1.0</l>
<l>*    DirSpeedR:=DirSpeedR*-1.0</l>
<l>*endif</l>
<l>FinalSpeedL:=Speed+DirSpeedL</l>
<l>FinalSpeedR:=Speed+DirSpeedR</l>
<c></c>
<l>robot_ctrl_motor_left (RobotHandle, FinalSpeedL)</l>
<l>robot_ctrl_motor_right (RobotHandle, FinalSpeedR)</l>
<c>    </c>
<c></c>
<l>return ()</l>
</body>
<docu id="robot_ctrl_drive">
<parameters>
<parameter id="Direction"/>
<parameter id="RobotHandle"/>
<parameter id="Speed"/>
</parameters>
</docu>
</procedure>
<procedure name="robot_ctrl_motor_left">
<interface>
<ic>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
<par name="Speed" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>FileHandle:=RobotHandle.robot_connection</l>
<l>FinalValue:=0</l>
<l>if(Speed&gt;1.0)</l>
<l>    Speed:=1.0</l>
<l>endif</l>
<l>if(Speed&lt;-1.0)</l>
<l>    Speed:=-1.0</l>
<l>endif</l>
<l>if(abs(Speed)&lt;0.05)</l>
<l>    FinalValue:=int(155)</l>
<l>else</l>
<l>    FinalValue:=Speed+1.0</l>
<c>    * Map 0.0 - 2.0 to 0 - 310</c>
<l>    FinalValue:=FinalValue*155</l>
<l>    FinalValue:=int(FinalValue)</l>
<l>endif</l>
<l>Command:=':ML='+FinalValue+'!'</l>
<l>robot_send_command(RobotHandle, Command)  </l>
<l>return ()</l>
</body>
<docu id="robot_ctrl_motor_left">
<parameters>
<parameter id="RobotHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="Speed">
<default_type>real</default_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="robot_ctrl_motor_right">
<interface>
<ic>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
<par name="Speed" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>FileHandle:=RobotHandle.robot_connection</l>
<l>FinalValue:=0</l>
<l>if(Speed&gt;1.0)</l>
<l>    Speed:=1.0</l>
<l>endif</l>
<l>if(Speed&lt;-1.0)</l>
<l>    Speed:=-1.0</l>
<l>endif</l>
<l>if(abs(Speed)&lt;0.05)</l>
<l>    FinalValue:=int(155)</l>
<l>else</l>
<l>    FinalValue:=Speed+1.0</l>
<c>    * Map 0.0 - 2.0 to 0 - 512</c>
<l>    FinalValue:=FinalValue*155</l>
<l>    FinalValue:=int(FinalValue)</l>
<l>endif</l>
<l>Command:=':MR='+FinalValue+'!'</l>
<l>fwrite_string (FileHandle, Command)</l>
<l>robot_send_command(RobotHandle, Command)  </l>
<l>return ()</l>
</body>
<docu id="robot_ctrl_motor_right">
<parameters>
<parameter id="RobotHandle"/>
<parameter id="Speed"/>
</parameters>
</docu>
</procedure>
<procedure name="robot_heartbeat">
<interface>
<ic>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>WDVal:=1</l>
<l>while (1)</l>
<l>    Command:=':WD='+WDVal+'!'</l>
<l>    robot_send_command(RobotHandle, Command)      </l>
<l>    WDVal:=(WDVal+1)%2</l>
<l>    wait_seconds (0.1)</l>
<l>endwhile</l>
<l>return ()</l>
</body>
<docu id="robot_heartbeat">
<parameters>
<parameter id="RobotHandle"/>
</parameters>
</docu>
</procedure>
<procedure name="robot_initialize">
<interface>
<oc>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>global tuple ThreadIDs</l>
<c></c>
<l>RobotHandle:=dict{}</l>
<l>create_mutex ([], [], SerialMutex)</l>
<l>get_system ('operating_system', OS)</l>
<l>if(OS=='Windows NT')</l>
<c>    * We are running on a developers laptop</c>
<l>    open_file ('C:/temp/robot_commands.txt', 'output', FileHandle)</l>
<l>else</l>
<c>    * We are likely running on the robot</c>
<l>    open_file ('/dev/ttyUSB0', 'output', FileHandle)</l>
<l>endif</l>
<l>RobotHandle.robot_connection:=FileHandle</l>
<l>RobotHandle.mutex:=SerialMutex</l>
<l>set_system ('flush_file', true)</l>
<c></c>
<l>par_start &lt;ThreadID&gt; : robot_heartbeat (RobotHandle)</l>
<l>wait_seconds (1)</l>
<l>ThreadIDs[0]:=ThreadID</l>
<l>RobotHandle.thread:=ThreadID</l>
<l>return ()</l>
</body>
<docu id="robot_initialize">
<parameters>
<parameter id="RobotHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="robot_send_command">
<interface>
<ic>
<par name="RobotHandle" base_type="ctrl" dimension="0"/>
<par name="CommandStr" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>FileHandle:=RobotHandle.robot_connection</l>
<l>Mutex:=RobotHandle.mutex</l>
<l>lock_mutex (Mutex)</l>
<l>try</l>
<l>    fwrite_string (FileHandle, CommandStr)  </l>
<l>    unlock_mutex (Mutex)</l>
<l>catch (Exception)</l>
<l>    unlock_mutex (Mutex)</l>
<l>endtry</l>
<l>return ()</l>
<c></c>
</body>
<docu id="robot_send_command">
<parameters>
<parameter id="CommandStr"/>
<parameter id="RobotHandle"/>
</parameters>
</docu>
</procedure>
</hdevelop>
